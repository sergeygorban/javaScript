/* Базовые типы (такие, как строки и числа) неизменны (immutable)

Существует шесть базовых типов:
    • Число (Number).
    • Строка (String).
    • Логический (Boolean).
    • Пусто (Null).
    • Неопределенный (Undefined).
    • Символ (Symbol).


Числа:
В JavaScript используется только один тип данных - приближенное представление вещественных чисел в формате IEEE 764
(числа с плавающей точкой двойной точности).

Строки:
Строка (string) - это просто текстовые данные (слово строка происходит от "строки символов" - термина, впервые
использованного в конце 1800-х годов типографскими наборщиками, а затем математиками для представления
последовательности символов в определенном порядке). Строки в JavaScript представлены в формате Unicode. Это и
ндустриальный компьютерный стандарт для представления текстовых данных, включающий точки кода (code point) для каждой
буквы или символа в наиболее известных человеческих языках (включая "языки'; которые могли бы удивить вас, такие как
Emoji). Хотя Unicode способен представлять текст на любом языке, это не означает, что программное обеспечение,
визуализирующее символы Unicode, будет способно правильно визуализировать каждую кодовую точку.

В JS, когда создается строка, то одновременно создается и временный объект String, для которого становятся доступны
определенные методы. После того, как метод вызванный для String завершает работу, временный объект String удаляется

В JavaScript строковые литералы представляются в одинарных кавычках, парных кавычках или обратных апострофах.
Обратные апострофы (backtick) были введены в ЕS6 для поддержки строковых шаблонов (template string)

Строковые шаблоны:
ЕSб вводит строковые шаблоны (template string), или строковую интерполяцию (string interpolation). Строковые шаблоны
позволяют быстро вводить значения в строку. В строковых шаблонах используются обратные апострофы вместо одинарных или
двойных кавычек.


Логические значения:
Переменная логического типа имеет только два возможных значения: true и false. Некоторые языки (например, С) используют
вместо логических значений числа: О - это false, а любое другое число - true. В JavaScript есть подобный механизм,
позволяющий рассматривать любое значение (не только числа) как "истину" или "ложь';

Символы:
Символы (symbol) являются новым типом данных ЕSб, представляющим индивидуальные лексемы. Вновь созданный символ
уникален: ему не будет соответствовать никакой другой символ. Таким образом, символы походят на объекты
(каждый объект уникален). Однако во всем остальном символы напоминают базовые типы. Символы создаются конструктором
Symbol()

Типы null и undefined:

*/

// Экранирование символов
const dialog = "Не looked up and said \"don't do that!\" to Мах.";

//Строковый шаблон
let currentTemp = 19.5 ;
console.log(`The current temperature is ${currentTemp}`);


// Создание символов
const RED = Symbol();
const ORANGE = Symbol("The color of а sunset !");

// Создание строк и временного объекта String
const a = "hello";
a.toUpperCase();
/* если после toUpperCase() вызвать вывод строки, то строка останется в нижнем регистре, так как временный объект
удаляется */




