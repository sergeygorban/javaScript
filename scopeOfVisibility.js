/*
Область видимости (scope) устанавливает, где и когда определяются переменные, константы и аргументы.

Мы также принимаем как очевидное, что переменные и константы не существуют, пока мы их не создадим. Таким образом,
они не находятся в области видимости, пока мы не объявляем их с ключевым словом let или const

Область видимости (или видимость (visiЬility)) относится к идентификаторам, которые в настоящее время видимы и доступны
выполняющейся в данный момент части программы (называемой контекстом выполнения (execution context)).
Существование, напротив, относится к идентификаторам, которые содержат нечто, для чего была распределена
(т.е. зарезервирована) область памяти.

Когда нечто прекращает существовать, JavaScript не обязательно освобождает память сразу же: она просто помечается как
не используемая и освобождается только при периодически запускаемом процессе сборки мусора (garbage collection). Сборка
мусора в JavaScript осуществляется автоматически и будет вас интересовать только в определенных чрезвычайно
требовательных приложениях.

ЛЕКСИЧЕСКАЯ И ДИНАМИЧЕСКАЯ ОБЛАСТЬ ВИДИМОСТИ

Области видимости в JavaScript являются лексическими, а значит, можно определить, какие переменные находятся в области
видимости, просто посмотрев на исходный код.
Лексическая область видимости означает, что в области видимости функции находятся только те переменные, которые были
определены до момента определения самой функции (не путать с моментом ее вызова).



*/